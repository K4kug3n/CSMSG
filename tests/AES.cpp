#include <catch2/catch_test_macros.hpp>

#include <AES.hpp>
#include <Utility.hpp>

TEST_CASE("AES256", "[AES256]") {
	SECTION("Test Vector 1") {
		std::array<uint8_t, 16> plaintext = { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff };
		std::array<uint8_t, 32> key = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f };

		std::array<uint8_t, 16> cyphertext = AES_block_encryption(plaintext, key);

		REQUIRE(cyphertext == std::array<uint8_t, 16>{ { 0x8e, 0xa2, 0xb7, 0xca, 0x51, 0x67, 0x45, 0xbf, 0xea, 0xfc, 0x49, 0x90, 0x4b, 0x49, 0x60, 0x89 } });
	
		std::array<uint8_t, 16> decrypted = AES_block_decryption(cyphertext, key);

		REQUIRE(decrypted == plaintext);
	}

	SECTION("CBC process") {
		std::vector<uint8_t> msg = { 'H', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd' };

		std::array<uint8_t, 32> key = random_bytes_array<32>();
		std::array<uint8_t, 16> IV = random_bytes_array<16>();

		std::vector<uint8_t> cyphertext = CBC_AES_encryption(msg, key, IV);

		std::vector<uint8_t> plaintext = CBC_AES_decryption(cyphertext, key);

		REQUIRE(plaintext == msg);
	}
}